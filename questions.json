[
  {
    "question": "Vad är state i React?",
    "options": ["Immutabelt", "Lokal lagring", "Globalt värde"],
    "answer": "Lokal lagring"
  },
  {
    "question": "Hur hanteras events i React?",
    "options": ["Event handlers", "Hooks", "DOM-manipulation"],
    "answer": "Event handlers"
  },
  {
    "question": "Vad är en prop i React?",
    "options": [
      "JavaScript-variabel",
      "Objekt till komponenter",
      "Funktion för state"
    ],
    "answer": "Objekt till komponenter"
  },
  {
    "question": "Hur optimerar man React-appar?",
    "options": ["Många useState", "Memoization", "Håll state lokalt"],
    "answer": "Håll state lokalt"
  },
  {
    "question": "Vad är JSX?",
    "options": [
      "JavaScript med CSS",
      "HTML i JavaScript",
      "Asynkrona API-anrop"
    ],
    "answer": "HTML i JavaScript"
  },
  {
    "question": "Vilket hook används för API-anrop?",
    "options": ["useFetch", "useData", "useEffect"],
    "answer": "useEffect"
  },
  {
    "question": "Vad används Closure för?",
    "options": ["Lagra variabler", "Synkronisering", "Externa API-anrop"],
    "answer": "Lagra variabler"
  },
  {
    "question": "Skillnad mellan let och const?",
    "options": ["let kan ändras", "const för block-scope", "Ingen skillnad"],
    "answer": "let kan ändras"
  },
  {
    "question": "Vad gör map() i JavaScript?",
    "options": [
      "Transformerar array",
      "Reducerar array",
      "Tar bort dubbletter"
    ],
    "answer": "Transformerar array"
  },
  {
    "question": "Vilket objekt hanterar asynkrona operationer?",
    "options": ["Promise", "Generator", "Async/Await"],
    "answer": "Promise"
  },
  {
    "question": "Vad innebär DOM?",
    "options": ["Struktur för HTML", "Externa API-anrop", "CSS för layout"],
    "answer": "Struktur för HTML"
  },
  {
    "question": "Vad gör useContext i React?",
    "options": ["Global kontext", "Synkronisering", "Styling"],
    "answer": "Global kontext"
  },
  {
    "question": "Vilket objekt hanterar nyckel-värde par i JavaScript?",
    "options": ["Array", "Object", "Map"],
    "answer": "Map"
  },
  {
    "question": "Vad är ES6?",
    "options": ["Ny version av JavaScript", "En databas", "CSS ramverk"],
    "answer": "Ny version av JavaScript"
  },
  {
    "question": "Vad är skillnaden mellan == och ===?",
    "options": [
      "== jämför typ och värde",
      "=== jämför endast värde",
      "Ingen skillnad"
    ],
    "answer": "== jämför typ och värde"
  },
  {
    "question": "Vad är React Lifecycle Hooks?",
    "options": [
      "Komponentens livscykel",
      "För att optimera rendering",
      "API-anrop"
    ],
    "answer": "Komponentens livscykel"
  },
  {
    "question": "Vad gör useMemo i React?",
    "options": ["Memoization", "API-anrop", "Styling"],
    "answer": "Memoization"
  },
  {
    "question": "Vad används LocalStorage för?",
    "options": [
      "Spara data lokalt",
      "Hantera användarinloggning",
      "Hantera sessionsdata"
    ],
    "answer": "Spara data lokalt"
  },
  {
    "question": "Skillnad mellan let och var?",
    "options": ["let har block-scope", "var kan ändras", "Ingen skillnad"],
    "answer": "let har block-scope"
  },
  {
    "question": "Vad är en callbackfunktion?",
    "options": [
      "En funktion som anropas senare",
      "En funktion som direkt exekveras",
      "En funktion som returnerar ett värde"
    ],
    "answer": "En funktion som anropas senare"
  },
  {
    "question": "Vad gör filter() i JavaScript?",
    "options": ["Filtrerar arrayen", "Skapar en ny array", "Reducerar arrayen"],
    "answer": "Filtrerar arrayen"
  },
  {
    "question": "Vad används för att hantera asynkrona operationer i JavaScript?",
    "options": ["Callback", "Promise", "Event listener"],
    "answer": "Promise"
  }
]
